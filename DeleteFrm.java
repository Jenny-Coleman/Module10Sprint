
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Work
 */
public class DeleteFrm extends javax.swing.JFrame {

    /**
     * Creates new form DeleteFrm
     */
    public DeleteFrm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudent = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblParent = new javax.swing.JTable();
        btnReload = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Delete");
        setPreferredSize(new java.awt.Dimension(596, 428));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Delete");

        tblStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Surname", "Date of Birth", "Gender", "Grade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblStudent);

        tblParent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Surname", "Contact Number", "Address", "Children Enrolled"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblParent);

        btnReload.setText("Reload");
        btnReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete Selected");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(btnReload, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addComponent(btnDelete)
                .addGap(89, 89, 89)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
            .addGroup(layout.createSequentialGroup()
                .addGap(257, 257, 257)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnDelete)
                    .addComponent(btnReload, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            Main pro = new Main();
            pro.createConnection();
            
            Statement Sstmt = (Statement) Main.con.createStatement();
            String Ssql = "SELECT * FROM tblstudent";
            ResultSet Srs = Sstmt.executeQuery(Ssql);

            Srs.beforeFirst();
            DefaultTableModel Stm = (DefaultTableModel)tblStudent.getModel();
            Stm.setRowCount(0);

            while (Srs.next()) {
                String id = Integer.toString(Srs.getInt("StudentID"));
                String name = Srs.getString("Name");
                String sname = Srs.getString("Surname");
                String dob = (Srs.getDate("DateOfBirth")).toString();
                String gender = Srs.getString("Gender");
                String grade = Integer.toString(Srs.getInt("Grade"));
                
                String[] data = {id, name, sname, dob, gender, grade};
                
                Stm.addRow(data);
            }
            
            Statement Pstmt = (Statement) Main.con.createStatement();
            String Psql = "SELECT * FROM tblparent";
            ResultSet Prs = Pstmt.executeQuery(Psql);

            Prs.beforeFirst();
            DefaultTableModel Ptm = (DefaultTableModel)tblParent.getModel();
            Ptm.setRowCount(0);

            while (Prs.next()) {
                String name = Prs.getString("Name");
                String sname = Prs.getString("Surname");
                String contact = Prs.getString("ContactNumber");
                String address = Prs.getString("Address");
                String enrolled = Integer.toString(Prs.getInt("NumberEnrolled"));
                
                String[] data = {name, sname, contact, address, enrolled};
                
                Ptm.addRow(data);
            }
            
            Main.con.close();
        } catch (SQLException ex) {
            Logger.getLogger(DeleteFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadActionPerformed
        try {
            Main pro = new Main();
            pro.createConnection();
            
            Statement Sstmt = (Statement) Main.con.createStatement();
            String Ssql = "SELECT * FROM tblstudent";
            ResultSet Srs = Sstmt.executeQuery(Ssql);

            Srs.beforeFirst();
            DefaultTableModel Stm = (DefaultTableModel)tblStudent.getModel();
            Stm.setRowCount(0);

            while (Srs.next()) {
                String id = Integer.toString(Srs.getInt("StudentID"));
                String name = Srs.getString("Name");
                String sname = Srs.getString("Surname");
                String dob = (Srs.getDate("DateOfBirth")).toString();
                String gender = Srs.getString("Gender");
                String grade = Integer.toString(Srs.getInt("Grade"));
                
                String[] data = {id, name, sname, dob, gender, grade};
                
                Stm.addRow(data);
            }
            
            Statement Pstmt = (Statement) Main.con.createStatement();
            String Psql = "SELECT * FROM tblparent";
            ResultSet Prs = Pstmt.executeQuery(Psql);

            Prs.beforeFirst();
            DefaultTableModel Ptm = (DefaultTableModel)tblParent.getModel();
            Ptm.setRowCount(0);

            while (Prs.next()) {
                String name = Prs.getString("Name");
                String sname = Prs.getString("Surname");
                String contact = Prs.getString("ContactNumber");
                String address = Prs.getString("Address");
                String enrolled = Integer.toString(Prs.getInt("NumberEnrolled"));
                
                String[] data = {name, sname, contact, address, enrolled};
                
                Ptm.addRow(data);
            }
            
            Main.con.close();
        } catch (SQLException ex) {
            Logger.getLogger(DeleteFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnReloadActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {                
            int row = tblStudent.getSelectedRow();
            DefaultTableModel model= (DefaultTableModel)tblStudent.getModel();            
            int id = Integer.parseInt(model.getValueAt(row, 0).toString());
            
            int input = JOptionPane.showConfirmDialog(null,
                "You are about to delete the selected student", "Warning",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            
            if (input == 0){
                Main pro = new Main();
                pro.createConnection();
                
                String sql = "DELETE FROM tblstudent WHERE StudentID = ?";
                PreparedStatement pstmt = Main.con.prepareStatement(sql);
                pstmt.setInt(1, id);
                pstmt.executeUpdate();
                
                JOptionPane.showMessageDialog(null, "Student deleted");
                
                Main.con.close();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Student " + e);
        }
        
        try {
            int row = tblParent.getSelectedRow();
            DefaultTableModel model= (DefaultTableModel)tblParent.getModel();            
            String id = (model.getValueAt(row, 0).toString());
            
            int input = JOptionPane.showConfirmDialog(null,
                "You are about to delete the selected parent", "Warning",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            
            if (input == 0){
                Main pro = new Main();
                pro.createConnection();
                
                
                String sql = "DELETE FROM tblparent WHERE Name = ?";
                PreparedStatement pstmt = Main.con.prepareStatement(sql);
                pstmt.setString(1, id);
                pstmt.executeUpdate();
                pstmt.executeUpdate();
                
                JOptionPane.showMessageDialog(null, "Parent deleted");
                
                Main.con.close();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Parent " + e);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        try {
            new LoginForm().setVisible(true);
            dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeleteFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeleteFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeleteFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeleteFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeleteFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblParent;
    private javax.swing.JTable tblStudent;
    // End of variables declaration//GEN-END:variables
}
